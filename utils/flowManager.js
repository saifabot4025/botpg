// ================== FLOW MANAGER (FINAL + CRM + GPT VARIETY) ==================
import { getCuteDynamicReply } from "../services/gptService.js";
import { sendTelegramAlert, sendTelegramPhoto, getLineProfile } from "../services/telegramService.js";
import { getLineImage } from "../services/lineMediaService.js";
import line from "@line/bot-sdk";

// ================== STATE MANAGEMENT ==================
const userStates = {};
const userPausedStates = {};
const flexCooldown = 2 * 60 * 60 * 1000; // 2 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á

function getUserState(userId) {
  if (!userStates[userId]) {
    userStates[userId] = {
      lastFlexSent: 0,
      currentCase: null,
      caseData: {},
      lastActive: Date.now(),
      greeted: false,
    };
  }
  return userStates[userId];
}

function updateUserState(userId, newState) {
  userStates[userId] = { ...getUserState(userId), ...newState };
}

function shouldSendFlex(userId) {
  const state = getUserState(userId);
  return Date.now() - state.lastFlexSent > flexCooldown;
}

function randomMaskedPhone() {
  const prefix = "08";
  const suffix = Math.floor(1000 + Math.random() * 9000);
  return `${prefix}xxxx${suffix}`;
}

// ‚úÖ ‡πÉ‡∏ä‡πâ GPT ‡∏™‡∏∏‡πà‡∏°‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏ö‡∏ö Dynamic (‡∏Å‡∏±‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ã‡πâ‡∏≥ + ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏ä‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏´‡∏ç‡∏¥‡∏á)
let usedNamesToday = new Set();
let currentDate = new Date().toLocaleDateString("th-TH");

async function getRandomName() {
  const today = new Date().toLocaleDateString("th-TH");
  if (today !== currentDate) {
    usedNamesToday.clear(); // ‚úÖ ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ß‡∏±‡∏ô
    currentDate = today;
  }

  for (let i = 0; i < 5; i++) {
    try {
      const name = (await getCuteDynamicReply(`
‡∏™‡∏∏‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡πÑ‡∏ó‡∏¢ 1 ‡∏ä‡∏∑‡πà‡∏≠ (‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏ä‡∏≤‡∏¢) 
‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏™‡πà‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• ‡∏ï‡∏≠‡∏ö‡πÅ‡∏Ñ‡πà‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
      `)).replace(/\n/g, "").trim();

      if (name && !usedNamesToday.has(name)) {
        usedNamesToday.add(name);
        return name;
      }
    } catch {}
  }

  // ‚úÖ fallback ‡∏ñ‡πâ‡∏≤ GPT error ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏∏‡πà‡∏°‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
  const fallbackNames = [
    "‡∏™‡∏°‡∏ä‡∏≤‡∏¢", "‡∏Å‡∏¥‡∏ï‡∏ï‡∏¥", "‡∏≠‡∏ô‡∏±‡∏ô‡∏ï‡πå", "‡∏ß‡∏µ‡∏£‡∏û‡∏•", "‡∏ì‡∏±‡∏ê‡∏û‡∏•", "‡∏õ‡∏Å‡∏£‡∏ì‡πå", "‡∏ô‡∏ó‡∏µ", "‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤", // ‡∏ú‡∏π‡πâ‡∏ä‡∏≤‡∏¢
    "‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á", "‡∏Å‡∏±‡∏ç‡∏ç‡∏≤", "‡∏®‡∏¥‡∏£‡∏¥‡∏û‡∏£", "‡∏ß‡∏≤‡∏™‡∏ô‡∏≤", "‡∏à‡∏¥‡∏£‡∏≤‡∏û‡∏£", "‡∏™‡∏∏‡∏û‡∏±‡∏ï‡∏£‡∏≤", "‡∏≠‡∏±‡∏ç‡∏ä‡∏•‡∏µ", "‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏à" // ‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á
  ];

  let name;
  do {
    name = fallbackNames[Math.floor(Math.random() * fallbackNames.length)];
  } while (usedNamesToday.has(name));

  usedNamesToday.add(name);
  return name;
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
async function notifyAdmin(event, message) {
  try {
    const profile = await getLineProfile(event.source?.userId);
    const displayName = profile?.displayName || "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ä‡∏∑‡πà‡∏≠";
    const oaName = process.env.LINE_OA_NAME || "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö OA";

    const text = `üì¢ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å ${oaName}\nüë§ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: ${displayName}\nüí¨ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: ${message}`;
    await sendTelegramAlert(text);

    if (event.message?.type === "image" && event.message.id) {
      const photoBuffer = await getLineImage(event.message.id);
      if (photoBuffer) {
        await sendTelegramPhoto(photoBuffer, `üì∑ ‡∏£‡∏π‡∏õ‡∏à‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (${displayName})`);
      }
    }
  } catch (err) {
    console.error("notifyAdmin Error:", err);
  }
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡πâ GPT ‡πÄ‡∏à‡∏ô‡∏Ñ‡∏≥‡∏û‡∏π‡∏î‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏° (‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•/‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢)
async function generateDynamicPrompt(baseType) {
  let prompt = "";
  if (baseType === "welcome") {
    prompt = `‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ö‡∏ö‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å 1 ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ ‡πÄ‡∏ä‡πà‡∏ô "‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏≤ üíï ‡∏°‡∏≤‡∏™‡∏ô‡∏∏‡∏Å‡∏Å‡∏±‡∏ô‡πÄ‡∏•‡∏¢!"`;
  } else if (baseType === "ask_info") {
    prompt = `‡∏™‡∏∏‡πà‡∏°‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏Ç‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ 1 ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ (‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ ‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ/‡∏ß‡∏≠‡πÄ‡∏•‡∏ó ‡πÅ‡∏•‡∏∞‡πÑ‡∏≠‡∏î‡∏µ‡πÑ‡∏•‡∏ô‡πå) 
    ‡πÄ‡∏ä‡πà‡∏ô "‡∏Ç‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡∏≠‡πÄ‡∏•‡∏ó ‡πÅ‡∏•‡∏∞‡πÑ‡∏≠‡∏î‡∏µ‡πÑ‡∏•‡∏ô‡πå ‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ üíï"`;
  } else if (baseType === "confirm_info") {
    prompt = `‡∏™‡∏∏‡πà‡∏°‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß 1 ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ ‡πÄ‡∏ä‡πà‡∏ô "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞ ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ô‡∏∞‡∏Ñ‡∏∞ üíï"`;
  }

  try {
    const msg = await getCuteDynamicReply(prompt);
    return msg.replace(/\n/g, "").trim();
  } catch {
    if (baseType === "welcome") return "üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ ‡∏°‡∏≤‡∏™‡∏ô‡∏∏‡∏Å‡∏Å‡∏±‡∏ô‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ üíï";
    if (baseType === "ask_info") return "‡∏Ç‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ/‡∏ß‡∏≠‡πÄ‡∏•‡∏ó ‡πÅ‡∏•‡∏∞‡πÑ‡∏≠‡∏î‡∏µ‡πÑ‡∏•‡∏ô‡πå‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ üíï";
    if (baseType === "confirm_info") return "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞ ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏π‡πÅ‡∏•‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ üíï";
  }
}
// ================== RANDOMIZED MESSAGES ==================
let cachedMaxWithdrawDate = null;
let cachedMaxWithdrawAmount = null;
let cachedMaxWithdrawName = null;

// ‚úÖ ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£) ‚Äì ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏™‡∏∏‡πà‡∏° + GPT ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏õ‡∏¥‡∏î‡∏ó‡πâ‡∏≤‡∏¢
async function generateWithdrawReviewMessage() {
  const reviews = [];
  for (let i = 0; i < 10; i++) {
    const phone = randomMaskedPhone();
    const amount = (Math.floor(Math.random() * (50000 - 5000)) + 5000).toLocaleString();
    reviews.push(`‡∏¢‡∏π‡∏™ ${phone} ‡∏ñ‡∏≠‡∏ô ${amount}`);
  }

  try {
    const extraText = await getCuteDynamicReply(
      "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏™‡∏±‡πâ‡∏ô‡πÜ ‡∏õ‡∏¥‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ñ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô ‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ‡∏à‡πà‡∏≤‡∏¢‡∏à‡∏£‡∏¥‡∏á ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á ‡πÉ‡∏ä‡πâ 1 ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ"
    );
    return `üìä ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î\n\n${reviews.join("\n")}\n\n${extraText.trim()}`;
  } catch {
    return `üìä ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î\n\n${reviews.join("\n")}\n\n‡πÄ‡∏ß‡πá‡∏ö‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á ‡∏à‡πà‡∏≤‡∏¢‡∏à‡∏£‡∏¥‡∏á üíï`;
  }
}

// ‚úÖ ‡∏¢‡∏≠‡∏î‡∏ñ‡∏≠‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô (‡∏™‡∏∏‡πà‡∏°‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏° 24 ‡∏ä‡∏°.)
async function generateMaxWithdrawMessage() {
  const today = new Date().toLocaleDateString("th-TH");

  if (cachedMaxWithdrawDate !== today) {
    cachedMaxWithdrawDate = today;
    cachedMaxWithdrawAmount = Math.floor(Math.random() * (500000 - 300000)) + 300000;
    cachedMaxWithdrawName = await getRandomName();
  }

  const phone = randomMaskedPhone();
  return `üëë ‡∏¢‡∏≠‡∏î‡∏ñ‡∏≠‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ\n\n‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì "${cachedMaxWithdrawName}" ‡∏¢‡∏π‡∏™ ${phone} ‡∏ñ‡∏≠‡∏ô ${cachedMaxWithdrawAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${cachedMaxWithdrawDate}`;
}

// ‚úÖ ‡πÄ‡∏Å‡∏°‡πÅ‡∏ï‡∏Å‡∏ö‡πà‡∏≠‡∏¢ (‡∏™‡∏∏‡πà‡∏° 5 ‡πÄ‡∏Å‡∏°) + GPT ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡∏ä‡∏ß‡∏ô‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
async function generateTopGameMessage() {
  const games = [
    "Graffiti Rush ‚Ä¢ ‡∏Å‡∏£‡∏≤‡∏ü‡∏ü‡∏¥‡∏ï‡∏µ‡πâ ‡∏£‡∏±‡∏ä",
    "Treasures of Aztec ‚Ä¢ ‡∏™‡∏≤‡∏ß‡∏ñ‡πâ‡∏≥",
    "Fortune Ox ‚Ä¢ ‡∏ß‡∏±‡∏ß‡πÇ‡∏î‡∏î",
    "Fortune Snake ‚Ä¢ ‡∏á‡∏π",
    "Fortune Rabbit ‚Ä¢ ‡πÄ‡∏Å‡∏°‡∏Å‡∏£‡∏∞‡∏ï‡πà‡∏≤‡∏¢",
    "Lucky Neko ‚Ä¢ ‡∏•‡∏±‡∏Ñ‡∏Å‡∏µ‡πâ ‡πÄ‡∏ô‡πÇ‡∏Å‡∏∞ ‡πÅ‡∏°‡∏ß",
    "Fortune Mouse ‚Ä¢ ‡πÄ‡∏Å‡∏°‡∏´‡∏ô‡∏π‡∏™‡∏≤‡∏°‡πÅ‡∏ñ‡∏ß",
    "Dragon Hatch ‚Ä¢ ‡πÄ‡∏Å‡∏°‡∏°‡∏±‡∏á‡∏Å‡∏£",
    "Wild Bounty Showdown ‚Ä¢ ‡∏Ñ‡∏≤‡∏ß‡∏ö‡∏≠‡∏¢",
    "Ways of the Qilin ‚Ä¢ ‡∏Å‡∏¥‡πÄ‡∏•‡∏ô",
    "Galaxy Miner ‚Ä¢ ‡∏≠‡∏ß‡∏Å‡∏≤‡∏®‡∏û‡∏≤‡πÇ‡∏ä‡∏Ñ",
    "Incan Wonders ‚Ä¢ ‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå‡∏ä‡∏ô‡πÄ‡∏ú‡πà‡∏≤",
    "Diner Frenzy Spins ‚Ä¢ ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á",
    "Dragon's Treasure Quest ‚Ä¢ ‡∏°‡∏±‡∏á‡∏Å‡∏£‡∏ã‡πà‡∏≠‡∏ô‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥",
    "Jack the Giant Hunter ‚Ä¢ ‡πÅ‡∏à‡πá‡∏Å‡∏ú‡∏π‡πâ‡∏Ü‡πà‡∏≤‡∏¢‡∏±‡∏Å‡∏©‡πå",
  ];

  const selected = games.sort(() => 0.5 - Math.random()).slice(0, 5);
  const randomPercent = () => Math.floor(Math.random() * 50) + 50;
  const freeSpinAmount = Math.floor(Math.random() * (200000 - 20000)) + 20000;
  const normalAmount = Math.floor(Math.random() * (50000 - 3000)) + 3000;

  let msg = "üé≤ ‡πÄ‡∏Å‡∏°‡∏™‡∏•‡πá‡∏≠‡∏ï‡πÅ‡∏ï‡∏Å‡∏ö‡πà‡∏≠‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ\n\n";
  selected.forEach((g, i) => {
    msg += `${i + 1}. ${g} - ${randomPercent()}%\n`;
  });
  msg += `\nüí• ‡∏ü‡∏£‡∏µ‡∏™‡∏õ‡∏¥‡∏ô‡πÅ‡∏ï‡∏Å‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: ${freeSpinAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n`;
  msg += `üí• ‡∏õ‡∏±‡πà‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤‡πÅ‡∏ï‡∏Å‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: ${normalAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n`;

  try {
    const extraText = await getCuteDynamicReply(
      "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏™‡∏±‡πâ‡∏ô‡πÜ ‡πÄ‡∏ä‡∏¥‡∏ç‡∏ä‡∏ß‡∏ô‡πÄ‡∏•‡πà‡∏ô‡∏™‡∏•‡πá‡∏≠‡∏ï‡πÄ‡∏ß‡πá‡∏ö‡∏ï‡∏£‡∏á ‡πÅ‡∏ï‡∏Å‡∏á‡πà‡∏≤‡∏¢ ‡∏à‡πà‡∏≤‡∏¢‡∏à‡∏£‡∏¥‡∏á ‡πÅ‡∏ö‡∏ö‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å 1 ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ"
    );
    return msg + `${extraText.trim()}`;
  } catch {
    return msg + "‡πÄ‡∏•‡πà‡∏ô‡∏á‡πà‡∏≤‡∏¢ ‡πÅ‡∏ï‡∏Å‡∏ö‡πà‡∏≠‡∏¢ ‡∏à‡πà‡∏≤‡∏¢‡∏à‡∏£‡∏¥‡∏á üíï";
  }
}

// ‚úÖ ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏≠‡∏°‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô (10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£) + GPT ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡∏ä‡∏ß‡∏ô‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
async function generateReferralCommissionMessage() {
  const lines = [];
  for (let i = 0; i < 10; i++) {
    const phone = randomMaskedPhone();
    const amount = (Math.floor(Math.random() * (100000 - 3000)) + 3000).toLocaleString();
    lines.push(`‡∏¢‡∏π‡∏™ ${phone} ‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏≠‡∏°‡∏°‡∏¥‡∏ä‡∏ä‡∏±‡πà‡∏ô‡∏à‡∏≤‡∏Å‡∏¢‡∏≠‡∏î‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ${amount}`);
  }

  try {
    const extraText = await getCuteDynamicReply(
      "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏™‡∏±‡πâ‡∏ô‡πÜ ‡∏ä‡∏ß‡∏ô‡∏Ñ‡∏ô‡∏ä‡∏ß‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏°‡∏≤‡πÄ‡∏•‡πà‡∏ô ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏≠‡∏°‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô ‡πÅ‡∏ö‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á 1 ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ"
    );
    return `ü§ù ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏≠‡∏°‡∏°‡∏¥‡∏ä‡∏ä‡∏±‡πà‡∏ô‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô\n\n${lines.join("\n")}\n\n${extraText.trim()}`;
  } catch {
    return `ü§ù ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏≠‡∏°‡∏°‡∏¥‡∏ä‡∏ä‡∏±‡πà‡∏ô‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô\n\n${lines.join("\n")}\n\nüí° ‡∏ä‡∏ß‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏°‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡πÜ ‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô!`;
  }
}
// ================== GPT INTENT (FINAL 100%) ==================
import fs from "fs";
import path from "path";

const logPath = path.join(process.cwd(), "intent_logs.json");
let lastRepliesCache = {}; // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ï‡∏≠‡∏ö‡∏ã‡πâ‡∏≥‡πÉ‡∏ô 1 ‡∏ô‡∏≤‡∏ó‡∏µ

// ‚úÖ Utility: ‡πÄ‡∏Å‡πá‡∏ö Log Intent & Reply
function logIntent(userText, intent, reply) {
  try {
    const logs = fs.existsSync(logPath)
      ? JSON.parse(fs.readFileSync(logPath, "utf8"))
      : [];
    logs.push({
      time: new Date().toISOString(),
      userText,
      intent,
      reply,
    });
    fs.writeFileSync(logPath, JSON.stringify(logs.slice(-200), null, 2));
  } catch (err) {
    console.error("‚ùå Error saving intent log:", err);
  }
}

// ‚úÖ Utility: ‡∏™‡∏∏‡πà‡∏° Emoji ‡∏ï‡∏≤‡∏° Intent
function getEmojiByIntent(intent) {
  const emojiMap = {
    emotion: ["ü•∞", "üíñ", "üòä", "ü§ó"],
    finance: ["üí∏", "üè¶", "üí≥", "üí∞"],
    register: ["üìù", "üíé", "‚ú®", "üéâ"],
    promotion: ["üéÅ", "üî•", "üí•", "üíé"],
    game_suggestion: ["üé∞", "üéÆ", "üî•", "üåü"],
    withdraw_time: ["‚åõ", "‚è≥", "üí≥", "üíµ"],
    problem: ["üõ†", "üîß", "üì¢", "üí¨"],
    general_question: ["ü§î", "üí°", "üìå", "‚ú®"],
    unknown: ["üí¨", "ü§ù", "üåü", "üéÄ"],
  };
  const list = emojiMap[intent] || emojiMap.unknown;
  return list[Math.floor(Math.random() * list.length)];
}

// ‚úÖ Template Fallback ‡∏ñ‡πâ‡∏≤ GPT ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
const fallbackTemplates = {
  emotion: [
    "‡∏ô‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏û‡∏µ‡πà‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ üíï ‡∏°‡∏≤‡∏™‡∏ô‡∏∏‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏∞",
    "‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏ô‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏™‡∏°‡∏≠‡∏Ñ‡πà‡∏≤ ü•∞",
  ],
  finance: [
    "‡∏Å‡∏≤‡∏£‡∏ù‡∏≤‡∏Å-‡∏ñ‡∏≠‡∏ô‡∏ó‡∏µ‡πà pgthai289 ‡∏ó‡∏≥‡∏á‡πà‡∏≤‡∏¢‡∏ô‡∏¥‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß üí≥ ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏Ñ‡πà 1-3 ‡∏ô‡∏≤‡∏ó‡∏µ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡πà‡∏≤",
    "‡∏ù‡∏≤‡∏Å-‡∏ñ‡∏≠‡∏ô‡∏≠‡∏≠‡πÇ‡∏ï‡πâ ‡∏™‡∏∞‡∏î‡∏ß‡∏Å ‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ 100% ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏≤ üí∏",
  ],
  register: [
    "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡πÜ ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞ ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏≤ ‚ú®",
    "‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏≤ ‡∏ñ‡πâ‡∏≤‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÅ‡∏à‡πâ‡∏á‡∏ô‡πâ‡∏≠‡∏á‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡πâ‡∏≤ üíï",
  ],
  promotion: [
    "‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡πÇ‡∏õ‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÉ‡∏´‡∏°‡πà ‡∏ù‡∏≤‡∏Å‡πÅ‡∏£‡∏Å ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∑‡∏ô‡∏¢‡∏≠‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡πÄ‡∏û‡∏µ‡∏¢‡∏ö‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏≤ üéÅ",
    "‡πÇ‡∏õ‡∏£‡πÅ‡∏£‡∏á ‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡πÄ‡∏¢‡∏≠‡∏∞ ‡∏°‡∏≤‡∏î‡∏π‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏≤ üí•",
  ],
  game_suggestion: [
    "‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≤‡∏ß‡∏ñ‡πâ‡∏≥, ‡∏Å‡∏¥‡πÄ‡∏•‡∏ô, Lucky Neko ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏≤ ‡πÅ‡∏ï‡∏Å‡∏á‡πà‡∏≤‡∏¢‡∏™‡∏∏‡∏î‡πÜ üé∞",
    "‡∏•‡∏≠‡∏á‡∏™‡∏≤‡∏ß‡∏ñ‡πâ‡∏≥‡∏Å‡∏±‡∏ö‡∏Å‡∏¥‡πÄ‡∏•‡∏ô‡∏î‡∏π‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡πÄ‡∏Å‡∏°‡∏Æ‡∏¥‡∏ï‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏≤ üî•",
  ],
  withdraw_time: [
    "‡∏ñ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏û‡∏µ‡∏¢‡∏á 1-3 ‡∏ô‡∏≤‡∏ó‡∏µ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡πà‡∏∞ ‚è≥",
    "‡∏£‡∏∞‡∏ö‡∏ö‡∏ñ‡∏≠‡∏ô‡∏≠‡∏≠‡πÇ‡∏ï‡πâ ‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏±‡∏ô‡πÉ‡∏à‡∏Ñ‡πà‡∏≤ üí≥",
  ],
  problem: [
    "‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏´‡πà‡∏ß‡∏á‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏ô‡πâ‡∏≠‡∏á‡∏ä‡πà‡∏ß‡∏¢‡∏î‡∏π‡πÅ‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏≤ üõ†",
    "‡∏ô‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ üíï",
  ],
  general_question: [
    "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ñ‡∏≤‡∏°‡∏ô‡∏∞‡∏Ñ‡∏∞ üí° ‡∏™‡∏ô‡πÉ‡∏à‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏≤",
    "‡∏ô‡πâ‡∏≠‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ó‡∏∏‡∏Å‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏≤ ü§ó",
  ],
  unknown: [
    "‡∏ô‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏™‡∏°‡∏≠‡∏Ñ‡πà‡∏∞ üíï ‡∏™‡∏ô‡πÉ‡∏à‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏±‡∏ö pgthai289 ‡πÅ‡∏à‡πâ‡∏á‡∏ô‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞",
  ],
};

// ‚úÖ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå Intent ‡∏î‡πâ‡∏ß‡∏¢ GPT
async function analyzeUserIntent(userText) {
  const prompt = `
‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå Intent ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏û‡∏ô‡∏±‡∏ô
- ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö:
  "problem", "finance", "register", "promotion", "game_suggestion", "withdraw_time", "emotion", "general_question"
- ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô JSON ‡πÄ‡∏ä‡πà‡∏ô:
{ "intent": "problem", "summary": "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ñ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤" }

‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: "${userText}"
  `;
  try {
    const res = await getCuteDynamicReply(prompt);
    return JSON.parse(res);
  } catch (err) {
    console.error("‚ùå analyzeUserIntent Error:", err);
    return { intent: "unknown", summary: userText };
  }
}

// ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏Å
async function generateSmartReply(userText) {
  const cacheKey = userText.trim();
  if (lastRepliesCache[cacheKey] && Date.now() - lastRepliesCache[cacheKey].time < 60 * 1000) {
    return lastRepliesCache[cacheKey].reply;
  }

  const intentData = await analyzeUserIntent(userText);
  let prompt = `
‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏û‡∏π‡∏î‡∏ß‡πà‡∏≤: "${userText}"
- Intent: ${intentData.intent}
- ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
- ‡πÉ‡∏ä‡πâ‡πÇ‡∏ó‡∏ô‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á ‡πÉ‡∏™‡πà Emoji ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
- ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 2 ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ
- ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ pgthai289 ‡πÄ‡∏ö‡∏≤‡πÜ
`;

  try {
    const reply = await getCuteDynamicReply(prompt);
    const finalReply = reply.trim() + " " + getEmojiByIntent(intentData.intent);
    logIntent(userText, intentData.intent, finalReply);
    lastRepliesCache[cacheKey] = { reply: finalReply, time: Date.now() };
    return finalReply;
  } catch (err) {
    console.error("‚ùå generateSmartReply Error:", err);
    const fallback = fallbackTemplates[intentData.intent] || fallbackTemplates.unknown;
    const finalReply = fallback[Math.floor(Math.random() * fallback.length)] + " " + getEmojiByIntent(intentData.intent);
    logIntent(userText, intentData.intent, finalReply);
    return finalReply;
  }
}
// ================== MAIN FLOW (FINAL 100%) ==================
const recentMessages = {}; // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á user

function isDuplicateMessage(userId, text) {
  const now = Date.now();
  if (!recentMessages[userId]) {
    recentMessages[userId] = { text, time: now };
    return false;
  }
  if (recentMessages[userId].text === text && now - recentMessages[userId].time < 5000) {
    return true; // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ã‡πâ‡∏≥‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 5 ‡∏ß‡∏¥
  }
  recentMessages[userId] = { text, time: now };
  return false;
}
  // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ï‡∏≠‡∏ö‡∏ã‡πâ‡∏≥‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 5 ‡∏ß‡∏¥
  if (isDuplicateMessage(userId, userText)) {
    console.log(`‚è© ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ã‡πâ‡∏≥‡∏Ç‡∏≠‡∏á ${userId} ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 5 ‡∏ß‡∏¥, ‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö‡∏ã‡πâ‡∏≥`);
  }

  // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏ö‡∏≠‡∏ó‡∏ñ‡∏π‡∏Å pause ‚Üí ‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏ù‡πà‡∏≤‡∏¢‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å
  if (userPausedStates[userId]) {
    if (userText.includes("‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞‡∏Ñ‡∏∞‡∏û‡∏µ‡πà")) {
      userPausedStates[userId] = false;
      updateUserState(userId, { currentCase: null, caseData: {} });
      replyMessages.push({ type: "text", text: "‡∏ô‡πâ‡∏≠‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏î‡∏π‡πÅ‡∏•‡∏û‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏Å‡∏ô‡∏∞‡∏Ñ‡∏∞ üíï" });
    } else {
      replyMessages.push({ type: "text", text: "‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏ù‡πà‡∏≤‡∏¢‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà ‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏ô‡∏∞‡∏Ñ‡∏∞ üíï" });
    }
  }

  // ‚úÖ ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà
  if (event.type === "follow") {
    const welcomePrompt = `
‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏û‡∏ô‡∏±‡∏ô‡πÉ‡∏´‡πâ‡∏î‡∏π‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å ‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡πÅ‡∏•‡∏∞‡∏ä‡∏ß‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏±‡∏ö PGTHAI289
‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô‡∏ö‡πà‡∏≠‡∏¢ ‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏±‡πâ‡∏ô ‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö ‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô
`;
    try {
      const welcomeText = await getCuteDynamicReply(welcomePrompt);
      replyMessages.push({ type: "text", text: welcomeText });
    } catch {
      replyMessages.push({ type: "text", text: "üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ ‡∏°‡∏≤‡∏™‡∏ô‡∏∏‡∏Å‡∏Å‡∏±‡∏ö PGTHAI289 ‡∏Å‡∏±‡∏ô‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ üíï" });
    }

    replyMessages.push({ type: "flex", altText: "üéÄ ‡πÄ‡∏°‡∏ô‡∏π‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì üéÄ", contents: createFlexMenuContents() });
    await notifyAdmin(event, "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà");
    updateUserState(userId, { lastFlexSent: Date.now() });
    return replyMessages;
  }

  // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Postback
  if (event.type === "postback" && event.postback?.data) {
    const data = event.postback.data;
    replyMessages.push({ type: "text", text: `‚úÖ ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ${data}` });

    const caseMap = {
      register_admin: "register_admin",
      login_backup: "login_backup",
      issue_deposit: "issue_deposit",
      issue_withdraw: "issue_withdraw",
      forgot_password: "forgot_password",
      promo_info: "promo_info",
      review_withdraw: "review_withdraw",
      max_withdraw: "max_withdraw",
      top_game: "top_game",
      referral_commission: "referral_commission",
    };

    if (caseMap[data]) {
      updateUserState(userId, { currentCase: caseMap[data], caseData: {} });
    }

    try {
      let msg = "";
      if (data === "register_admin") {
        msg = await getCuteDynamicReply("‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡∏Ç‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å (‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•, ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£, ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ/‡∏ß‡∏≠‡πÄ‡∏•‡∏ó, ‡πÑ‡∏≠‡∏î‡∏µ‡πÑ‡∏•‡∏ô‡πå) ‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô");
      } else if (data === "login_backup") {
        msg = await getCuteDynamicReply("‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏à‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô");
      } else if (data === "issue_deposit") {
        msg = await getCuteDynamicReply("‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏à‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠+‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏™‡∏•‡∏¥‡∏õ‡∏ù‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö");
      } else if (data === "issue_withdraw") {
        msg = "‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏∞ ‡∏£‡∏≠ 3-5 ‡∏ô‡∏≤‡∏ó‡∏µ üíï";
      } else if (data === "forgot_password") {
        msg = "‡πÅ‡∏à‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠+‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏ß‡πâ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏ô‡πâ‡∏≠‡∏á‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏∞ üíï";
      } else if (data === "promo_info") {
        msg = "‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡πÇ‡∏õ‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÉ‡∏´‡∏°‡πà ‡∏ù‡∏≤‡∏Å‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô ‡πÅ‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡∏Ñ‡∏∑‡∏ô‡∏¢‡∏≠‡∏î‡πÄ‡∏™‡∏µ‡∏¢ ‡∏™‡∏ô‡πÉ‡∏à‡πÇ‡∏õ‡∏£‡πÑ‡∏´‡∏ô‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ö‡∏ô‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞ üíï";
      } else if (data === "review_withdraw") {
        msg = await generateWithdrawReviewMessage();
      } else if (data === "max_withdraw") {
        msg = await generateMaxWithdrawMessage();
      } else if (data === "top_game") {
        msg = await generateTopGameMessage();
      } else if (data === "referral_commission") {
        msg = await generateReferralCommissionMessage();
      }

      replyMessages.push({ type: "text", text: msg });
    } catch (err) {
      replyMessages.push({ type: "text", text: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞ üíï" });
    }

    return replyMessages;
  }

  // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏Ñ‡∏™ ‚Üí ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÅ‡∏à‡πâ‡∏á‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏ù‡πà‡∏≤‡∏¢
  if (state.currentCase && (userText.length > 3 || event.message?.type === "image")) {
    await notifyAdmin(event, `‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (‡πÄ‡∏Ñ‡∏™ ${state.currentCase}): ${userText || "‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ"}`);
    replyMessages.push({ type: "text", text: "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞ ‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏ù‡πà‡∏≤‡∏¢‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ô‡∏∞‡∏Ñ‡∏∞ üíï" });
    userPausedStates[userId] = true;
    return replyMessages;
  }

  // ‚úÖ ‡∏™‡πà‡∏á Flex Menu ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏∏‡∏Å 2 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
  if (event.type === "message" && shouldSendFlex(userId)) {
    replyMessages.push({ type: "flex", altText: "üéÄ ‡πÄ‡∏°‡∏ô‡∏π‡∏û‡∏¥‡πÄ‡∏®‡∏©", contents: createFlexMenuContents() });
    updateUserState(userId, { lastFlexSent: Date.now() });
  }

  // ‚úÖ GPT ‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
  try {
    const gptReply = await generateSmartReply(userText);
    replyMessages.push({ type: "text", text: gptReply });
    await notifyAdmin(event, userText || "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°/‡∏£‡∏π‡∏õ");
    return replyMessages;
  } catch (error) {
    console.error("GPT Reply error:", error);
    replyMessages.push({ type: "text", text: "‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏Ñ‡πà‡∏∞ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á üíï" });
    return replyMessages;
  }
}
// ================== MAIN FLOW (FINAL 100%) ==================
export async function handleCustomerFlow(event) {
  const userId = event.source?.userId;
  const state = getUserState(userId);
  const replyMessages = [];
  const userText = event.message?.text?.trim() || "";

  // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∏‡∏¢
  if (!state.chatHistory) state.chatHistory = [];
  if (userText) state.chatHistory.push({ role: "user", text: userText, time: new Date().toISOString() });
  if (state.chatHistory.length > 10) state.chatHistory.shift(); // ‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏Ñ‡πà 10 ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î

  // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏ö‡∏≠‡∏ó‡∏ñ‡∏π‡∏Å pause
  if (userPausedStates[userId]) {
    if (userText.includes("‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞‡∏Ñ‡∏∞‡∏û‡∏µ‡πà")) {
      userPausedStates[userId] = false;
      updateUserState(userId, { currentCase: null, caseData: {} });
      replyMessages.push({ type: "text", text: "‡∏ô‡πâ‡∏≠‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏î‡∏π‡πÅ‡∏•‡∏û‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏Å‡∏ô‡∏∞‡∏Ñ‡∏∞ üíï" });
    } else {
      replyMessages.push({ type: "text", text: "‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏ù‡πà‡∏≤‡∏¢‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏ô‡∏∞‡∏Ñ‡∏∞ üíï" });
    }
    return replyMessages;
  }

  // ‚úÖ ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô
  if (event.type === "follow") {
    const welcomePrompt = `
‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏û‡∏ô‡∏±‡∏ô‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å ‡∏ä‡∏ß‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏±‡∏ö PGTHAI289
‡∏≠‡∏¢‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô‡∏ö‡πà‡∏≠‡∏¢ ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏ô‡∏à‡∏£‡∏¥‡∏á
`;
    const welcomeText = await getCuteDynamicReply(welcomePrompt);

    replyMessages.push({ type: "text", text: welcomeText });
    replyMessages.push({ type: "flex", altText: "üéÄ ‡πÄ‡∏°‡∏ô‡∏π‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì üéÄ", contents: createFlexMenuContents() });

    await notifyAdmin(event, "üì¢ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà");
    updateUserState(userId, { lastFlexSent: Date.now(), customerTag: "NEW" });
    return replyMessages;
  }

  // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Postback
  if (event.type === "postback" && event.postback?.data) {
    const data = event.postback.data;

    // ‚úÖ ‡πÉ‡∏´‡πâ GPT ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏à‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏ï‡∏≠‡∏ö postback ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥
    const gptConfirmText = await getCuteDynamicReply(
      `‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏™‡∏±‡πâ‡∏ô‡πÜ ‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á "${data}" ‡πÅ‡∏•‡πâ‡∏ß`
    );
    replyMessages.push({ type: "text", text: gptConfirmText });

    const caseMap = {
      register_admin: "register_admin",
      login_backup: "login_backup",
      issue_deposit: "issue_deposit",
      issue_withdraw: "issue_withdraw",
      forgot_password: "forgot_password",
      promo_info: "promo_info",
      review_withdraw: "review_withdraw",
      max_withdraw: "max_withdraw",
      top_game: "top_game",
      referral_commission: "referral_commission",
    };

    if (caseMap[data]) {
      updateUserState(userId, { currentCase: caseMap[data], caseData: {} });
    }

    let msg = "";
    switch (data) {
      case "register_admin":
        msg = await generateDynamicPrompt("ask_info");
        break;
      case "login_backup":
        msg = await getCuteDynamicReply(
          "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏à‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô"
        );
        break;
      case "issue_deposit":
        msg = await getCuteDynamicReply(
          "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏à‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠+‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏™‡∏•‡∏¥‡∏õ‡∏ù‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö"
        );
        break;
      case "issue_withdraw":
        msg = "‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏∞ ‡∏£‡∏≠ 3-5 ‡∏ô‡∏≤‡∏ó‡∏µ üíï";
        break;
      case "forgot_password":
        msg = "‡πÅ‡∏à‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠+‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏ß‡πâ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏ô‡πâ‡∏≠‡∏á‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏∞ üíï";
        break;
      case "promo_info":
        msg = "‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡πÇ‡∏õ‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÉ‡∏´‡∏°‡πà ‡∏ù‡∏≤‡∏Å‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô ‡πÅ‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡∏Ñ‡∏∑‡∏ô‡∏¢‡∏≠‡∏î‡πÄ‡∏™‡∏µ‡∏¢ ‡∏™‡∏ô‡πÉ‡∏à‡πÇ‡∏õ‡∏£‡πÑ‡∏´‡∏ô‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ö‡∏ô‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞ üíï";
        break;
      case "review_withdraw":
        msg = await generateWithdrawReviewMessage();
        break;
      case "max_withdraw":
        msg = await generateMaxWithdrawMessage();
        break;
      case "top_game":
        msg = await generateTopGameMessage();
        break;
      case "referral_commission":
        msg = await generateReferralCommissionMessage();
        break;
    }

    replyMessages.push({ type: "text", text: msg });
    return replyMessages;
  }

  // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏Ñ‡∏™ ‚Üí ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÅ‡∏à‡πâ‡∏á‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏ù‡πà‡∏≤‡∏¢
  if (state.currentCase && (userText.length > 3 || event.message?.type === "image")) {
    const confirmMsg = await generateDynamicPrompt("confirm_info");
    replyMessages.push({ type: "text", text: confirmMsg });

    await notifyAdmin(
      event,
      `‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (‡πÄ‡∏Ñ‡∏™ ${state.currentCase}): ${userText || "‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ"}\n\nüìú ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:\n${state.chatHistory
        .slice(-5)
        .map((c) => `‚Ä¢ ${c.role}: ${c.text}`)
        .join("\n")}`
    );

    userPausedStates[userId] = true;
    return replyMessages;
  }

  // ‚úÖ ‡∏™‡πà‡∏á Flex Menu ‡∏ó‡∏∏‡∏Å 2 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
  if (event.type === "message" && shouldSendFlex(userId)) {
    replyMessages.push({ type: "flex", altText: "üéÄ ‡πÄ‡∏°‡∏ô‡∏π‡∏û‡∏¥‡πÄ‡∏®‡∏©", contents: createFlexMenuContents() });
    updateUserState(userId, { lastFlexSent: Date.now() });
  }

  // ‚úÖ GPT ‡∏ï‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡πÇ‡∏î‡∏¢‡πÉ‡∏™‡πà context ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∏‡∏¢
  try {
    const historyContext = state.chatHistory
      .slice(-5)
      .map((c) => `${c.role === "user" ? "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤" : "‡∏ö‡∏≠‡∏ó"}: ${c.text}`)
      .join("\n");

    const smartPrompt = `
‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∏‡∏¢‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:
${historyContext}

‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà: "${userText}"

‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Ñ‡∏∏‡∏¢‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å‡πÜ ‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡πÅ‡∏•‡∏∞‡∏ä‡∏ß‡∏ô‡πÄ‡∏•‡πà‡∏ô pgthai289 ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡πÄ‡∏î‡∏¥‡∏°
‡∏ï‡∏≠‡∏ö‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 2 ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ
`;
    const gptReply = await getCuteDynamicReply(smartPrompt);
    replyMessages.push({ type: "text", text: gptReply });

    await notifyAdmin(event, userText || "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°/‡∏£‡∏π‡∏õ");
    return replyMessages;
  } catch (error) {
    console.error("GPT Reply error:", error);
    replyMessages.push({ type: "text", text: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏ô‡∏∞‡∏Ñ‡∏∞ üíï" });
    return replyMessages;
  }
}
// ================== CRM FOLLOW-UP SYSTEM (ULTIMATE) ==================
const crmHistory = {}; // ‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á CRM { userId: timestamp }
const crmTemplates = [
  `‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡πÑ‡∏õ 3 ‡∏ß‡∏±‡∏ô
  ‡∏ä‡∏ß‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏•‡πà‡∏ô PGTHAI289 ‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡πâ‡∏≥‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å ‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô
  ‡πÄ‡∏ô‡πâ‡∏ô‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏ï‡∏Å‡∏á‡πà‡∏≤‡∏¢ ‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡πÄ‡∏¢‡∏≠‡∏∞ ‡πÅ‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏£‡∏≠‡∏≠‡∏¢‡∏π‡πà`,
  
  `‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏†‡∏≤‡∏û‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡πÑ‡∏õ 3 ‡∏ß‡∏±‡∏ô
  ‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏•‡πà‡∏ô PGTHAI289 ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤
  ‡∏°‡∏µ‡πÄ‡∏Å‡∏°‡∏™‡∏•‡πá‡∏≠‡∏ï‡πÉ‡∏´‡∏°‡πà ‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡πÅ‡∏ï‡∏Å‡∏á‡πà‡∏≤‡∏¢ ‡πÅ‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤`,
  
  `‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏ó‡∏±‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Ñ‡∏∏‡∏¢‡∏°‡∏≤ 3 ‡∏ß‡∏±‡∏ô
  ‡πÉ‡∏´‡πâ‡πÄ‡∏ô‡πâ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á ‡πÄ‡∏ä‡∏¥‡∏ç‡∏ä‡∏ß‡∏ô‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏•‡πà‡∏ô PGTHAI289
  ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ö‡∏≠‡∏Å‡∏Ç‡πà‡∏≤‡∏ß‡∏î‡∏µ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏Å‡∏°‡πÅ‡∏ï‡∏Å‡∏á‡πà‡∏≤‡∏¢ ‡πÅ‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏à‡∏±‡∏î‡πÄ‡∏ï‡πá‡∏°`
];

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Template ‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°
function getRandomTemplate() {
  return crmTemplates[Math.floor(Math.random() * crmTemplates.length)];
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏ô‡πà‡∏ß‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á (‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡πà‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô)
function randomDelay() {
  return Math.floor(Math.random() * 600000); // 0 - 10 ‡∏ô‡∏≤‡∏ó‡∏µ
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
async function generateBehaviorBasedMessage(uid) {
  const state = userStates[uid] || {};
  let behavior = "‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ";

  if (state.totalDeposit > 5000) behavior = "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ù‡∏≤‡∏Å‡πÄ‡∏¢‡∏≠‡∏∞";
  else if (state.totalDeposit > 0) behavior = "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏ù‡∏≤‡∏Å‡πÅ‡∏ï‡πà‡∏´‡∏≤‡∏¢‡πÑ‡∏õ";
  else behavior = "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏ß‡πâ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ù‡∏≤‡∏Å";

  const prompt = `
‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢ CRM
‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡πÑ‡∏õ 3 ‡∏ß‡∏±‡∏ô
- ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: ${behavior}
- ‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å ‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô
- ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏•‡πà‡∏ô PGTHAI289
- ‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏ï‡∏Å‡∏á‡πà‡∏≤‡∏¢ ‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡πÄ‡∏¢‡∏≠‡∏∞ ‡πÅ‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡∏û‡∏¥‡πÄ‡∏®‡∏©
- ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 2 ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ
`;

  try {
    return await getCuteDynamicReply(prompt);
  } catch {
    return "‡∏ô‡πâ‡∏≠‡∏á‡∏Ñ‡∏¥‡∏î‡∏ñ‡∏∂‡∏á‡∏û‡∏µ‡πà‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏°‡∏≤‡∏•‡∏≠‡∏á‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡πÄ‡∏û‡∏µ‡∏¢‡∏ö‡∏ó‡∏µ‡πà PGTHAI289 ‡∏Å‡∏±‡∏ô‡∏Ñ‡πà‡∏∞ üíï";
  }
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å CRM
export function initCRM(lineClient) {
  setInterval(async () => {
    const now = Date.now();

    // ‚úÖ ‡∏Ñ‡∏±‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡πÑ‡∏õ >3 ‡∏ß‡∏±‡∏ô ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö CRM ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏°.
    const inactiveUsers = Object.keys(userStates).filter((uid) => {
      const lastActive = userStates[uid]?.lastActive || 0;
      const lastCRM = crmHistory[uid] || 0;
      return now - lastActive > 3 * 24 * 60 * 60 * 1000 && now - lastCRM > 24 * 60 * 60 * 1000;
    });

    for (const uid of inactiveUsers) {
      try {
        // ‚úÖ ‡πÉ‡∏ä‡πâ GPT + Behavior-Based Message
        const followUpText = await generateBehaviorBasedMessage(uid);

        // ‚úÖ ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡πà‡∏á (‡∏™‡∏∏‡πà‡∏° 0-10 ‡∏ô‡∏≤‡∏ó‡∏µ)
        setTimeout(async () => {
          await lineClient.pushMessage(uid, { type: "text", text: followUpText });

          await lineClient.pushMessage(uid, {
            type: "flex",
            altText: "üéÄ ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤ üéÄ",
            contents: createFlexMenuContents(),
          });

          await sendTelegramAlert(`üì¢ CRM ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: ${uid}`);
          crmHistory[uid] = Date.now(); // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö CRM ‡πÅ‡∏•‡πâ‡∏ß
        }, randomDelay());
      } catch (err) {
        console.error("CRM Error:", err);
      }
    }
  }, 6 * 60 * 60 * 1000); // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏ó‡∏∏‡∏Å 6 ‡∏ä‡∏°.
}
