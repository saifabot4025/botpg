import sqlite3 from "sqlite3";
import { open } from "sqlite";
import cron from "node-cron";
import { sendTelegramAlert } from "../services/telegramService.js";

let db;
let lineClient;

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô CRM + ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
export async function initCRM(client) {
  lineClient = client;
  db = await open({
    filename: "./crm.db",
    driver: sqlite3.Database,
  });

  await db.exec(`
    CREATE TABLE IF NOT EXISTS customers (
      userId TEXT PRIMARY KEY,
      displayName TEXT,
      lastActive INTEGER
    )
  `);

  console.log("‚úÖ CRM Database Initialized");

  // ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤ cron job (‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á)
  cron.schedule("0 12 * * *", () => {
    sendAutoFollowUp();
  });
}

// ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
export async function trackUserActivity(userId, displayName = "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ä‡∏∑‡πà‡∏≠") {
  const now = Date.now();
  const existing = await db.get("SELECT * FROM customers WHERE userId = ?", [userId]);

  if (existing) {
    await db.run("UPDATE customers SET lastActive = ?, displayName = ? WHERE userId = ?", [
      now,
      displayName,
      userId,
    ]);
  } else {
    await db.run("INSERT INTO customers (userId, displayName, lastActive) VALUES (?, ?, ?)", [
      userId,
      displayName,
      now,
    ]);
  }
}

// ‚úÖ Template ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°
function getRandomMessageTemplate(days, name) {
  const templates = {
    3: [
      `üëã ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞‡∏Ñ‡∏∏‡∏ì${name} ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô 3 ‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞‡∏Ñ‡∏∞ üéâ ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡πÄ‡∏Å‡∏°‡∏î‡∏µ ‡πÜ ‡∏£‡∏≠‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏•‡∏¢`,
      `üíé ‡∏Ñ‡∏∏‡∏ì${name} ‡∏´‡∏≤‡∏¢‡πÑ‡∏õ 3 ‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡πâ‡∏≤‡∏≤ ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏•‡∏≠‡∏á‡πÄ‡∏Å‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Æ‡∏¥‡∏ï‡∏Å‡∏±‡∏ô‡∏´‡∏ô‡πà‡∏≠‡∏¢‡πÑ‡∏´‡∏°‡∏Ñ‡∏∞`,
      `üî• ‡∏Ñ‡∏∏‡∏ì${name} ‡∏´‡∏≤‡∏¢‡πÑ‡∏õ 3 ‡∏ß‡∏±‡∏ô! ‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏ô‡∏õ‡∏±‡πà‡∏ô‡πÄ‡∏Å‡∏°‡∏Å‡∏±‡∏ô‡∏™‡∏ô‡∏∏‡∏Å‡πÄ‡∏•‡∏¢ ‡∏°‡∏≤‡∏•‡∏≠‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞`,
    ],
    7: [
      `üìÖ ‡∏Ñ‡∏∏‡∏ì${name} ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤ 7 ‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß üéÅ ‡∏°‡∏µ‡πÇ‡∏õ‡∏£‡∏î‡∏µ ‡πÜ ‡∏£‡∏≠‡∏≠‡∏¢‡∏π‡πà‡∏ô‡∏∞‡∏Ñ‡∏∞`,
      `üíñ ‡∏Ñ‡∏¥‡∏î‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏∏‡∏ì${name} ‡∏à‡∏±‡∏á‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞ 7 ‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞ ‡∏°‡∏≤‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏ô‡πâ‡∏≤`,
      `üé≤ ‡∏Ñ‡∏∏‡∏ì${name} ‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡∏ô‡∏≤‡∏ô 7 ‡∏ß‡∏±‡∏ô‡πÄ‡∏•‡∏¢! ‡∏•‡∏≠‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏™‡∏ô‡∏∏‡∏Å‡∏Å‡∏±‡∏ö‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà ‡πÜ ‡∏î‡∏π‡∏™‡∏¥‡∏Ñ‡∏∞`,
    ],
    15: [
      `üóì ‡∏Ñ‡∏∏‡∏ì${name} ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤ 15 ‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏Ñ‡∏ô‡∏ñ‡∏≠‡∏ô‡∏£‡∏±‡∏ß ‡πÜ ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞`,
      `üí• 15 ‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏à‡∏≠‡∏Ñ‡∏∏‡∏ì${name} ‡∏°‡∏≤‡∏™‡∏ô‡∏∏‡∏Å‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‡πÜ ‡∏Å‡∏±‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡πâ‡∏≤`,
      `üöÄ ‡∏Ñ‡∏∏‡∏ì${name} ‡∏´‡∏≤‡∏¢‡πÑ‡∏õ 15 ‡∏ß‡∏±‡∏ô! ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏•‡∏∏‡πâ‡∏ô‡πÇ‡∏ä‡∏Ñ‡∏Å‡∏±‡∏ô‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞`,
    ],
    30: [
      `‚è≥ ‡∏Ñ‡∏∏‡∏ì${name} ‡∏´‡∏≤‡∏¢‡πÑ‡∏õ 30 ‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß! ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡πÅ‡∏•‡∏∞‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏ç‡πà ‡πÜ ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞`,
      `üéÅ 30 ‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏à‡∏≠‡∏Ñ‡∏∏‡∏ì${name} ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏Å‡∏±‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏∞`,
      `‚ú® ‡∏Ñ‡∏∏‡∏ì${name} ‡∏´‡∏≤‡∏¢‡πÑ‡∏õ 30 ‡∏ß‡∏±‡∏ô‡πÄ‡∏ï‡πá‡∏°! ‡∏•‡∏≠‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏™‡∏ô‡∏∏‡∏Å‡∏Å‡∏±‡∏ö‡πÄ‡∏Å‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏≤‡πÅ‡∏£‡∏á‡∏™‡∏¥‡∏Ñ‡∏∞`,
    ],
  };

  const list = templates[days] || templates[3];
  return list[Math.floor(Math.random() * list.length)];
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà Active
async function sendAutoFollowUp() {
  const now = Date.now();
  const customers = await db.all("SELECT * FROM customers");
  let report = "üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤\n";

  const targets = [];

  customers.forEach((c) => {
    const days = Math.floor((now - c.lastActive) / (1000 * 60 * 60 * 24));
    if ([3, 7, 15, 30].includes(days)) {
      targets.push({ ...c, days });
    }
  });

  let success = 0;
  let fail = 0;

  for (const t of targets) {
    const msg = getRandomMessageTemplate(t.days, t.displayName || "‡∏Ñ‡∏∏‡∏ì");
    try {
      await lineClient.pushMessage(t.userId, [{ type: "text", text: msg }]);
      success++;
    } catch (err) {
      fail++;
      console.error(`‚ùå ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á ${t.userId} ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß`, err);
    }
  }

  report += `üë• ‡∏£‡∏ß‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏Å‡∏ì‡∏ë‡πå: ${targets.length} ‡∏Ñ‡∏ô\n`;
  report += `‚úÖ ‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${success} ‡∏Ñ‡∏ô\n‚ùå ‡∏™‡πà‡∏á‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${fail} ‡∏Ñ‡∏ô`;

  await sendTelegramAlert(report);
  console.log(report);
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡πÄ‡∏ß‡∏•‡∏≤)
export async function testFollowUp() {
  await sendAutoFollowUp();
}
