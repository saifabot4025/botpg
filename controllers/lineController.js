import fetch from "node-fetch";
import { createFlexMenu } from "../utils/flexMenu.js";
import { handleCustomerFlow } from "../utils/flowManager.js"; // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå flowManager.js
import { sendTelegramAlert } from "../services/telegramService.js";

const LINE_REPLY_URL = "https://api.line.me/v2/bot/message/reply";
const ACCESS_TOKEN = process.env.LINE_CHANNEL_ACCESS_TOKEN;

/**
 * ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á LINE
 */
async function replyMessage(replyToken, messages) {
  if (!replyToken || !messages || messages.length === 0) return;

  try {
    await fetch(LINE_REPLY_URL, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${ACCESS_TOKEN}`,
      },
      body: JSON.stringify({
        replyToken,
        messages: Array.isArray(messages) ? messages : [messages],
      }),
    });
  } catch (error) {
    console.error("‚ùå Error sending reply message:", error);
  }
}

/**
 * ‚úÖ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Event ‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏à‡∏≤‡∏Å LINE
 */
export async function handleLineEvent(event) {
  let replyMessages = [];

  try {
    // ‚úÖ ‡∏Å‡∏£‡∏ì‡∏µ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô
    if (event.type === "follow") {
      replyMessages.push({
        type: "text",
        text:
          "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Ñ‡πà‡∏∞ üíï ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà PGTHAI289\n" +
          "‡πÄ‡∏ß‡πá‡∏ö‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ‡∏ù‡∏≤‡∏Å-‡∏ñ‡∏≠‡∏ô‡∏≠‡∏≠‡πÇ‡∏ï‡πâ\n" +
          "üî• ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏ó‡∏±‡∏ô‡∏ó‡∏µ! üî•",
      });

      replyMessages.push(createFlexMenu());

      // üîî ‡πÅ‡∏à‡πâ‡∏á‡πÑ‡∏õ Telegram ‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡πà‡∏≤ ‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô
      await sendTelegramAlert(`üì• ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô (LINE OA: PGTHAI289)\nID: ${event.source?.userId}`);

      await replyMessage(event.replyToken, replyMessages);
      return;
    }

    // ‚úÖ ‡∏Å‡∏£‡∏ì‡∏µ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Postback
    if (event.type === "message" || event.type === "postback") {
      const flowResult = await handleCustomerFlow(event);

      if (Array.isArray(flowResult)) {
        replyMessages.push(...flowResult.filter((m) => m.type));
      } else if (typeof flowResult === "string") {
        replyMessages.push({ type: "text", text: flowResult });
      }

      // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° Flex Menu ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      const skipFlex =
        Array.isArray(flowResult) && flowResult.some((m) => m.skipFlex === true);

      if (!skipFlex) {
        replyMessages.push(createFlexMenu());
      }

      await replyMessage(event.replyToken, replyMessages);
    }
  } catch (error) {
    console.error("‚ùå handleLineEvent Error:", error);

    await replyMessage(event.replyToken, [
      {
        type: "text",
        text:
          "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ üò• ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á\n" +
          "‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏à‡∏∞‡∏£‡∏µ‡∏ö‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ñ‡∏∏‡∏ì‡∏û‡∏µ‡πà‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß‡∏Ñ‡πà‡∏∞ üíï",
      },
    ]);
  }
}
