import fetch from "node-fetch";
import FormData from "form-data";

const TELEGRAM_API = `https://api.telegram.org/bot${process.env.TELEGRAM_BOT_TOKEN}`;
const LINE_API = "https://api-data.line.me/v2/bot/message";

/**
 * ‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ Telegram Group
 */
export async function sendTelegramAlert(text) {
  if (!process.env.TELEGRAM_BOT_TOKEN || !process.env.TELEGRAM_GROUP_CHAT_ID) {
    console.warn("‚ö†Ô∏è TELEGRAM_BOT_TOKEN ‡∏´‡∏£‡∏∑‡∏≠ TELEGRAM_GROUP_CHAT_ID ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤");
    return;
  }

  console.log("[Telegram Alert] Sending message:", text);

  try {
    const res = await fetch(`${TELEGRAM_API}/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        chat_id: process.env.TELEGRAM_GROUP_CHAT_ID,
        text,
        parse_mode: "HTML",
      }),
    });

    if (!res.ok) {
      const errorText = await res.text();
      console.error("‚ùå Telegram sendMessage failed:", errorText);
    } else {
      console.log("‚úÖ Telegram sendMessage success");
    }
  } catch (err) {
    console.error("‚ùå Error sending Telegram alert:", err);
  }
}

/**
 * ‚úÖ ‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡πÑ‡∏õ Telegram Group
 */
export async function sendTelegramPhoto(photoBuffer, caption = "") {
  if (!process.env.TELEGRAM_BOT_TOKEN || !process.env.TELEGRAM_GROUP_CHAT_ID) {
    console.warn("‚ö†Ô∏è TELEGRAM_BOT_TOKEN ‡∏´‡∏£‡∏∑‡∏≠ TELEGRAM_GROUP_CHAT_ID ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤");
    return;
  }

  try {
    const formData = new FormData();
    formData.append("chat_id", process.env.TELEGRAM_GROUP_CHAT_ID);
    formData.append("caption", caption);
    formData.append("photo", photoBuffer, "line-image.jpg");

    const res = await fetch(`${TELEGRAM_API}/sendPhoto`, {
      method: "POST",
      body: formData,
    });

    if (!res.ok) {
      const errorText = await res.text();
      console.error("‚ùå Telegram sendPhoto error:", errorText);
    } else {
      console.log("‚úÖ Telegram sendPhoto success");
    }
  } catch (err) {
    console.error("‚ùå Error sending photo to Telegram:", err);
  }
}

/**
 * ‚úÖ ‡∏î‡∏∂‡∏á‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å LINE
 */
export async function getLineProfile(userId) {
  if (!process.env.LINE_CHANNEL_ACCESS_TOKEN) {
    console.warn("‚ö†Ô∏è LINE_CHANNEL_ACCESS_TOKEN ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤");
    return null;
  }

  try {
    const res = await fetch(
      `https://api.line.me/v2/bot/profile/${userId}`,
      {
        headers: { Authorization: `Bearer ${process.env.LINE_CHANNEL_ACCESS_TOKEN}` },
      }
    );

    if (!res.ok) {
      console.error("‚ùå LINE profile fetch failed, status:", res.status);
      return null;
    }
    return await res.json();
  } catch (err) {
    console.error("‚ùå Error fetching LINE profile:", err);
    return null;
  }
}

/**
 * ‚úÖ ‡∏î‡∏∂‡∏á‡∏£‡∏π‡∏õ‡∏à‡∏≤‡∏Å LINE API ‚Üí Buffer (‡∏™‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤ Telegram ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢)
 */
export async function getLineImage(messageId) {
  if (!process.env.LINE_CHANNEL_ACCESS_TOKEN) {
    console.warn("‚ö†Ô∏è LINE_CHANNEL_ACCESS_TOKEN ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤");
    return null;
  }

  try {
    const res = await fetch(`${LINE_API}/${messageId}/content`, {
      headers: {
        Authorization: `Bearer ${process.env.LINE_CHANNEL_ACCESS_TOKEN}`,
      },
    });

    if (!res.ok) {
      console.error("‚ùå LINE image fetch failed, status:", res.status);
      return null;
    }
    return Buffer.from(await res.arrayBuffer());
  } catch (err) {
    console.error("‚ùå Error fetching LINE image:", err);
    return null;
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô Telegram
export async function testTelegramAlert() {
  await sendTelegramAlert("üõ†Ô∏è ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô Telegram ‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö LINE OA ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏Ñ‡πà‡∏∞");
}
