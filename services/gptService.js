// services/gptService.js
import OpenAI from "openai";
import { staffNames } from "../utils/staffNames.js";

const client = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÅ‡∏ö‡∏ö‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏¥‡∏° ‡∏ñ‡πâ‡∏≤‡πÉ‡∏´‡πâ assistantName ‡∏°‡∏≤ ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏∏‡πà‡∏°‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà
 * @param {string} baseMessage
 * @param {string} assistantName
 * @returns {Promise<string>}
 */
export async function getCuteDynamicReply(baseMessage, assistantName = null) {
  const staffName = assistantName || staffNames[Math.floor(Math.random() * staffNames.length)];
  const prompt = `
  ‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á‡∏ä‡∏∑‡πà‡∏≠ "${staffName}" ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ß‡πá‡∏ö PGTHAI289
  - ‡∏ï‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å ‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô ‡∏≠‡πâ‡∏≠‡∏ô ‡πÜ ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á ‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û
  - ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏´‡πâ‡∏≤‡∏°‡πÅ‡∏Ç‡πá‡∏á‡∏ó‡∏∑‡πà‡∏≠, ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡∏≥‡∏ã‡πâ‡∏≥, ‡πÑ‡∏°‡πà‡∏¢‡∏≤‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ
  - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ‡∏ù‡∏≤‡∏Å-‡∏ñ‡∏≠‡∏ô‡∏á‡πà‡∏≤‡∏¢
  - ‡∏ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ô‡πÉ‡∏ô 10 ‡∏ô‡∏≤‡∏ó‡∏µ‡πÅ‡∏£‡∏Å ‡∏´‡πâ‡∏≤‡∏°‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠, ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÅ‡∏ä‡∏ó‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡πÄ‡∏î‡∏¥‡∏°
  - ‡∏´‡πâ‡∏≤‡∏°‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏±‡∏ß‡∏ã‡πâ‡∏≥‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (‡πÄ‡∏ä‡πà‡∏ô ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞...‡∏ä‡∏∑‡πà‡∏≠...)
  - ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÇ‡∏õ‡∏£ ‡∏£‡∏∞‡∏ö‡∏ö ‡∏Ñ‡∏≤‡∏™‡∏¥‡πÇ‡∏ô ‡∏™‡∏•‡πá‡∏≠‡∏ï ‡∏ö‡∏≠‡∏• ‡∏Ø‡∏•‡∏Ø ‡πÉ‡∏´‡πâ‡πÄ‡∏ô‡∏µ‡∏¢‡∏ô‡∏ä‡∏ß‡∏ô‡πÄ‡∏•‡πà‡∏ô
  - ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö ‡πÉ‡∏´‡πâ‡∏ñ‡∏≤‡∏°‡∏ï‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏à‡∏£‡∏¥‡∏á
  - ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡πÅ‡∏ô‡∏ö‡∏°‡∏≤ ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡πâ‡∏ô

  ‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå: ${baseMessage}
  `;

  try {
    const completion = await client.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [{ role: "user", content: prompt }],
    });
    return completion.choices[0].message.content.trim();
  } catch (err) {
    console.error("GPT Error:", err);
    return `${staffName} ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏π‡πÅ‡∏•‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡∏ô‡∏∞‡∏Ñ‡∏∞ üíï`;
  }
}
